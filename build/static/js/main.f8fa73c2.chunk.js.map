{"version":3,"sources":["components/Logo.js","components/ErrorHandler/ErrorModal.js","components/ConnectionDisplay.js","components/SearchPage.js","components/StartPage.js","components/StartButtonPage.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","ErrorModal","props","className","classes","header","title","content","message","actions","onClick","onConfirm","addDurationToTime","time","h","min","split","hours","minutes","hoursSum","Number","minutesSum","outputWithoutYear","date","dateStringSplitted","toString","dateMonth","dateDay","ConnectionDisplay","useState","setEndClicked","hideConnectionDisplay","console","log","departureDay","departureStop","newDepartureTime","StringTime","hs","Math","floor","mins","round","stringToTime","additionalRandomMinutes","tneu","timeToDecimalAdd","departureTime","splittedDurationsCheap","m","t","trail1","waiting1","trail2","durationSplitCheap","durationH","durationMin","waiting2","trail3","durationSplitFast","size","color","destinationStop","onGoBack","type","onSetStartFormHidden","SearchPage","setDepartureStop","setDestinationStop","setDepartureDay","setDepartureTime","searchClicked","setSearchClicked","error","setError","hideSearchFields","setHideSearchFields","departureInputRef","useRef","destinationInputRef","errorOccured","Fragment","list","value","onChange","event","target","placeholder","ref","a","current","trim","length","id","StartPage","hideStartForm","setStartFormHidden","callSearchPage","setCallSearchPage","StartButtonPage","clicked","setClicked","class","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8fa73c2.chunk.js","sourcesContent":["import \"../Style.css\";\r\n\r\nfunction Logo() {\r\n  return (\r\n    <div className=\"logo\">\r\n      <h1 className=\"logo_h2\">Nav2Gö</h1>\r\n    </div>\r\n  );\r\n}\r\nexport default Logo;\r\n","import React from \"react\";\r\n// import Card from './Card';\r\nimport \"../../Style.css\";\r\n// import Button from './Button';\r\nimport classes from \"./ErrorModal.module.css\";\r\n\r\nconst ErrorModal = (props) => {\r\n  return (\r\n    <div className=\"ErrorPage\">\r\n      {/* <div className={classes.backdrop} onClick={props.onConfirm} />   Hier müsste noch eine Card oder Form drüber gelegegt werden*/}\r\n      {/* backdrop meint auf den Hintergrund klicken */}\r\n      <div className=\"ErrorPageTitle\">\r\n        <header className={classes.header}>\r\n          <h2>{props.title}</h2>\r\n        </header>\r\n        <div className={classes.content}>\r\n          <p>{props.message}</p>\r\n        </div>\r\n        <footer className={classes.actions}>\r\n          <button onClick={props.onConfirm}>Zurück zur Suche</button>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../Style.css\";\r\nimport Logo from \"./Logo.js\";\r\nimport SearchPage from \"./SearchPage.js\";\r\nimport End from \"./End.js\";\r\nimport { FaBus } from \"react-icons/fa\";\r\nimport { GiKickScooter } from \"react-icons/gi\";\r\nimport { BsArrowRight } from \"react-icons/bs\";\r\n\r\n//import 'webpack';\r\n/* import logo from '.../public/busemoji.png'\r\n\r\nconsole.log(logo); // /logo.84287d09.png\r\n\r\nfunction Header() {\r\n  // Import result is the URL of your image\r\n  return <img src={logo} alt=\"Logo\" />;\r\n}\r\n */\r\n\r\n//die Fahrtdauer im Format h (Eingabewert 1), min (Eingabewert 2) wird nach einem Festen Schlüssel (0,1 , 0,3 oder 0,2 der Gesamtfahrtdauer) \r\n// aufgeteilt in 2 bzw. 3 Fahrten und 1 bzw. 2 Wartezeiten . Ausgegeben wird es\r\n// in einem Array nach dem Muster [Fahrtdauer1, WartezeitAufFahrt2, Fahrtdauer2, usw]\r\nconst durationSplitCheap = (h, m)=>  {\r\n  const hour= Number(h);\r\n  const min = Number(m);\r\n  const t= Number(h*60 + min);\r\n  const trail1= Number(Math.floor(t*0.3)); \r\n  const waiting1 = Number(Math.floor(t*0.15));\r\n  const trail2 = Number(t-trail1-waiting1);\r\n  //console.log(\"durationSplitFast= \"+ [ Number(trail1), Number(waiting1), Number(trail2)]);\r\n  return[ Number(trail1), Number(waiting1), Number(trail2)];\r\n}\r\n\r\nconst durationSplitFast= (h, m)=>  {\r\n  const hour= Number(h);\r\n  const min = Number(m);\r\n  const t= Number(h*60 + min);\r\n  let trail1= Number(Math.floor(t*0.3)); \r\n  let waiting1 = Number(Math.floor(t*0.1));\r\n  let trail2= Number(Math.floor(t*0.2)); \r\n  let waiting2 = Number(Math.floor(t*0.15));\r\n  let trail3 = Number(t-trail1-waiting1-trail2-waiting2);\r\n  //console.log(\"durationSplitCheap= \"+ [Number(trail1), Number(waiting1), Number(trail2), Number(waiting2), Number(trail3)])\r\n  return[Number(trail1), Number(waiting1), Number(trail2), Number(waiting2), Number(trail3)]\r\n}\r\n\r\n// zu einer Uhrzeit (attribut 1) eine h (attribut 2) und Min (attribut 3)  hinzufügen\r\nconst addDurationToTime = (time, h, min) => {\r\n  //console.log(\"time =\" + time );\r\n  const [hours, minutes] = time.split(\":\");\r\n  var h = Number(h);\r\n  let hoursSum = Number(hours) + Number(h);\r\n  let minutesSum = Number(minutes) + Number(min); \r\n  let dateChange = false;\r\n    while(minutesSum>=60) {\r\n      minutesSum = minutesSum -60;\r\n     hoursSum = hoursSum +1 ;}\r\n    if(minutesSum<10) minutesSum = \"0\" + minutesSum ;\r\n  if (hoursSum>=24){ \r\n    hoursSum -= 24;\r\n    // addDay(props.departureDay,true);\r\n  };\r\n  if(hoursSum<10) hoursSum = \"0\" + hoursSum ;\r\n  return([hoursSum + \":\" + minutesSum, dateChange ]);\r\n}\r\n\r\nconst addDay = (date, changeVariable) => {\r\n  let dateString = date.toString();\r\n  let dateStringSplitted = dateString.split(\"-\");\r\n  let dateMonth= Number(dateStringSplitted[1]); \r\n  let dateDay = Number(dateStringSplitted[2]);\r\n  let dateYear = Number(dateStringSplitted[0]);\r\n    if (changeVariable == true){\r\n      if( (dateMonth == 2) && (dateDay==(28) ) && (dateYear == 2024 || 2018 || 2032|| 2036) ) {\r\n        dateMonth = dateMonth+1;\r\n        dateDay = 1;\r\n      }\r\n      if( (dateMonth == 1||3||5||7||8||10||12) && (dateDay==31) ){\r\n        dateDay= 1;\r\n        if(dateMonth == 12) {\r\n          dateMonth=1;\r\n          dateYear= dateYear+1;\r\n          }else{dateMonth = dateMonth+1;}\r\n      }\r\n      if ( (dateMonth == 4||6||9||11) && (dateDay==30) ){\r\n        dateMonth = dateMonth+1;\r\n        dateDay = 1;\r\n      } \r\n    }\r\n  if(dateDay<10) dateDay = \"0\" + dateDay;\r\n  return(dateYear+\"-\"+dateMonth+\"-\"+dateDay); \r\n}\r\n\r\nconst outputWithoutYear= (date) => { \r\n  let dateString = date.toString();\r\n  let dateStringSplitted = dateString.split(\"-\");\r\n  let dateMonth= Number(dateStringSplitted[1]); \r\n  let dateDay = Number(dateStringSplitted[2]);\r\n  let dateYear = Number(dateStringSplitted[0]);\r\n  return(dateDay+\".\"+dateMonth+\".\");\r\n}\r\n\r\n// //fügt dem eingegebenden Datum einen weitern Tag hinzu\r\n// const changeArrivalDate = (earlyDate, change) => {\r\n//   if (change== true){\r\n//     // console.log(\"changeArrivalDate: \" +earlyDate );\r\n//     let newDate = new Date(earlyDate.setTime( earlyDate.getTime() + 1 * 86400000 ));\r\n//   return(newDate);\r\n//   }else{\r\n//     return (earlyDate);\r\n//   }\r\n// }\r\n\r\n// Date.prototype.addDays = function(days) {\r\n//   var date = new Date(this.valueOf());\r\n\r\n//   date.setDate(date.getDate() + days);\r\n//   return date;\r\n// }\r\n\r\n// Entwurf: zu einer Dauer (hs attribut 1, mins attribut 2) eine Dauer () h (attribut 3) und Min (attribut 4))  hinzufügen\r\n //und in der Form ... ausgeben:\r\n// const addDurationToDuration = (h1, m1, h2, m2) => {\r\n//   let hours1 = Number(h1);\r\n//   let hours2 = Number(h2);\r\n//   let min1 = Number(min1);\r\n//   let min2 = Number(min2);\r\n\r\nconst ConnectionDisplay = (props) => {\r\n  const [clickedEnd, setEndClicked] = useState(false);\r\n  const [hideConnectionDisplay, setHideConnectionDisplay] = useState(false);\r\n  // const [loadingMessage, setloadingMessage] = useState(true);\r\n  const [changeDay, setChangeDay] = useState(false);\r\n\r\n  {console.log( props.departureDay, props.departureStop)};\r\n\r\n  const backClickHandler = () => {\r\n    props.onGoBack();\r\n  };\r\n  const endClickHandler = () => {\r\n    setEndClicked(true);\r\n  };\r\n// ------------------------------- FÜR DIE VERZÖGERUNG---------------------------------------------------------------\r\n  // useEffect(() => {\r\n  //   const timer = setTimeout(() => {\r\n  //  setHideConnectionDisplay(false);\r\n  //  setloadingMessage(false);\r\n  //   }, 1000);\r\n  //   return () => clearTimeout(timer);\r\n  // }, []);\r\n\r\n//   --------------------------(nicht ganz so wichtige) Ideen für Eingabezeit + paar Sekunden als Losfahrzeit anzeigen--------------------\r\n\r\n// zum in-string konvertieren, außerdem zwischen 3-9 min (zufällig) hinzufügen \r\nconst timeToDecimalAdd = (time) => {\r\n  const [hours, minutes] = time.split(\":\");\r\n  let additionalRandomMinutes =  props. additionalRandomMinutes;\r\n  let tneu=Number(minutes)+ Number(additionalRandomMinutes);\r\n  return(Number(hours) + Number(tneu) / 60 );\r\n}\r\n\r\n//   zum String in Zeit konvertieren \r\nconst stringToTime = (StringTime) => {\r\n  const hs = Math.floor(StringTime);\r\n  const mins = Math.round((StringTime - hs) * 60);\r\n  return `${hs < 10 ? \"0\" : \"\"}${hs}:${mins < 10 ? \"0\" : \"\"}${mins}`;\r\n}\r\n\r\nlet newDepartureTime = stringToTime(timeToDecimalAdd(props.departureTime));\r\nlet splittedDurationsCheap = durationSplitCheap(props.durationH, props.durationMin);\r\nlet splittedDurationsFast = durationSplitFast( props.durationH, props.durationMin);\r\n\r\n  return (\r\n    <div className=\"container-verbindung\">\r\n    {/* {endClickHandler ? null:  */}\r\n    {hideConnectionDisplay ? null  : (\r\n      <form>\r\n        <h1 className=\"Verbindung-header\">Verbindung</h1>\r\n        {/* <Bild/> \r\n        <img src={require('.../public/busemoji.png')} />\r\n        */}\r\n     <h2 className=\"h2ConnectionDisplay\">Schritt 1</h2>\r\n        <div className=\"container-ConnectionDisplay\">\r\n          <div className=\"verbindung-textfeld\">\r\n            {\" \"}\r\n            <p>Abfahrt:</p> {outputWithoutYear(props.departureDay)} um {newDepartureTime}{\" \"}\r\n          </div>\r\n          <div className=\"verbindung-textfeld\">Linie: 50</div>\r\n          <div className=\"verbindung-textfeld\">\r\n            <p>Ankunft:</p> {outputWithoutYear(props.departureDay)} um {addDurationToTime(newDepartureTime, Number(0), Number(splittedDurationsCheap[0]))} {\" \"}\r\n          </div>\r\n          <div className=\"verbindung-textfeld\">\r\n            <p>Abfahrt an Haltestelle:</p> {props.departureStop}{\" \"}\r\n          </div>\r\n          <div className=\"busIcon\">\r\n          <FaBus size=\"3rem\" color=\"white\" />\r\n          </div>\r\n          <div className=\"verbindung-textfeld\">\r\n            <p>Ankunft an Haltestelle:</p> Weender Straße-Ost {\" \"}\r\n          </div>\r\n        </div>\r\n        <h2 className=\"h2ConnectionDisplay\">Schritt 2</h2>\r\n        <div className=\"container-ConnectionDisplay\">\r\n          <div className=\"verbindung-textfeld\">\r\n            {\" \"}\r\n            <p>Abfahrt:</p> {outputWithoutYear(props.departureDay)} um {addDurationToTime(newDepartureTime, Number(0), Number(splittedDurationsCheap[0]+ splittedDurationsCheap[1]))}{\" \"}\r\n          </div>\r\n          <div className=\"verbindung-textfeld\">Linie: 18</div>\r\n          <div className=\"verbindung-textfeld\">\r\n            <p>Ankunft:</p> {outputWithoutYear(props.departureDay)} um {addDurationToTime(newDepartureTime, Number(0), Number(splittedDurationsCheap[0]+ splittedDurationsCheap[1]+ splittedDurationsCheap[2]))}{\" \"}\r\n          </div>\r\n          <div className=\"verbindung-textfeld\">\r\n            <p>Abfahrt an Haltestelle:</p> Weender Straße-Ost {\" \"}\r\n          </div>\r\n          <div className=\"busIcon\">\r\n          <FaBus size=\"3rem\" color=\"white\" />\r\n            </div>\r\n          <div className=\"verbindung-textfeld\">\r\n            <p>Ankunft an Haltestelle:</p> {props.destinationStop}{\" \"}\r\n          </div>\r\n        </div>\r\n        <div className=\"buttons-verbindung\">\r\n          <button\r\n            className=\"button\"\r\n            onClick={backClickHandler}\r\n            type=\"submit\"\r\n          >\r\n            {\" \"}\r\n            Zurück\r\n          </button>\r\n          <button className=\"button\" onClick={() => {endClickHandler(); props.onSetStartFormHidden(true); } }>\r\n            {\" \"}\r\n            Test Beenden?\r\n          </button>\r\n        </div>\r\n      </form>\r\n    )}\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default ConnectionDisplay;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport ErrorModal from \"./ErrorHandler/ErrorModal.js\";\r\nimport \"../Style.css\";\r\nimport Verbindungsanzeige from \"./ConnectionDisplay.js\";\r\nimport StartPage from \"./StartPage.js\";\r\nimport { BsArrowLeftRight } from \"react-icons/bs\";\r\nimport ConnectionDisplay from \"./ConnectionDisplay.js\";\r\n\r\nconst SearchPage = (props) => {\r\n  // useState\r\n\r\n  const [departureStop, setDepartureStop] = useState(\"\");\r\n  const [destinationStop, setDestinationStop] = useState(\"\");\r\n  const [departureDay, setDepartureDay] = useState(\"\");\r\n  const [departureTime, setDepartureTime] = useState(\"\");\r\n  const [searchClicked, setSearchClicked] = useState(false);\r\n  const [error, setError] = useState();\r\n  const [hideSearchFields, setHideSearchFields] = useState(false);\r\n  const departureInputRef = useRef();\r\n  const destinationInputRef = useRef();\r\n  // const [loadingMessage, setloadingMessage] = useState(true);\r\n\r\n  let errorOccured = false;\r\n\r\n  const backClickHandler = () => {\r\n    props.onGoBack();\r\n  };\r\n\r\n  const departureChangeHandler = (event) => {\r\n    setDepartureStop(event.target.value);\r\n    //const enteredDeparture = departureInputRef.current.value;\r\n  };\r\n\r\n  //////// Fehlerprüfung - Prevent////////////////\r\n\r\n  const errorPrevent = () => {\r\n    if (\r\n      departureStop.trim().length === 0 ||\r\n      destinationStop.trim().length === 0\r\n    ) {\r\n      setError({\r\n        title: \"Falsche Daten\",\r\n        message: \"Bitte geben Sie einen passenden Start- und Zielort ein!\",\r\n      });\r\n      return (errorOccured = true);  \r\n    }\r\n    if (departureTime === \"\" || departureDay === \"\") {\r\n      setError({\r\n        title: \"Falsche Daten\",\r\n        message: \"Bitte geben Sie einen Abfahrtstag und eine Abfahrtszeit an!\",\r\n      });\r\n      return (errorOccured = true); \r\n    }\r\n    if(departureStop === destinationStop){\r\n      setError({\r\n        title: \"Falsche Daten\",\r\n        message: \"Start- und Zielort dürfen nicht identisch sein!\",\r\n      });\r\n      return (errorOccured = true); \r\n    }\r\n  };\r\n\r\n  ////////// ErrorHandler /////////\r\n\r\n  const errorHandler = () => {\r\n    setError(false);\r\n  };\r\n\r\n  // errorPrevent();\r\n  // console.log(Error);\r\n  // //{Error? setSearchClicked(false) : setSearchClicked(true)}\r\n  // if (Error) {\r\n  //   return setSearchClicked(true) && console.log(\"weiter gehts\");\r\n  // }\r\n  // return setSearchClicked(false) && console.log(\"Fehler Aufgetreten\");\r\n\r\n  ////// Handler ///////\r\n\r\n  const searchClickedHandler = () => {\r\n    setSearchClicked(true);\r\n  };\r\n\r\n  // In \"Update\" von Kai funktioniert es noch\r\n\r\n  // let departure [] = {departurevalue = departureInputRef.current.value }\r\n  // let destination [] = { destinationvalue = destinationInputRef}\r\n\r\n  const changeStopHandler = () => {\r\n    let a = departureInputRef.current.value;\r\n    setDepartureStop(destinationInputRef.current.value);\r\n    setDestinationStop(a);\r\n  };\r\n\r\n  const destinationStopHandler = (event) => {\r\n    setDestinationStop(event.target.value);\r\n    // const enteredDestinationStop = destinationInputRef.current.value;\r\n  };\r\n  const departureDayHandler = (event) => {\r\n    setDepartureDay(event.target.value);\r\n    //localStorage.setItem()\r\n  };\r\n  const departureTimeHandler = (event) => {\r\n    setDepartureTime(event.target.value);\r\n  };\r\n\r\n   // ------------------------------- FÜR DIE VERZÖGERUNG---------------------------------------------------------------\r\n//  useEffect(() => {\r\n//   const timer = setTimeout(() => {\r\n//  setloadingMessage(false);\r\n//   }, 1000);\r\n//   return () => clearTimeout(timer);\r\n// }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {error && (\r\n        <ErrorModal\r\n          title={error.title}\r\n          message={error.message}\r\n          onConfirm={errorHandler}\r\n        />\r\n      )}\r\n      {hideSearchFields ? null : (\r\n        <div>\r\n          <h1> Verbindungssuche </h1>\r\n          <div className=\"container-searchpage\">\r\n            <input\r\n              list=\"haltestellen\"\r\n              type=\"text\"\r\n              value={departureStop}\r\n              onChange={departureChangeHandler}\r\n              placeholder=\"Start\"\r\n              ref={departureInputRef}\r\n            />\r\n            <button className=\"button-swap\" onClick={changeStopHandler}>\r\n              {/* {\" \"} */}\r\n              <BsArrowLeftRight size=\"3rem\" />\r\n            </button>\r\n            <input\r\n              list=\"haltestellen\"\r\n              type=\"text\"\r\n              value={destinationStop}\r\n              onChange={destinationStopHandler}\r\n              placeholder=\"Ziel\"\r\n              ref={destinationInputRef}\r\n            />\r\n            <input\r\n              type=\"date\"\r\n              value={departureDay}\r\n              onChange={departureDayHandler}\r\n            />\r\n            <br></br>\r\n            <input\r\n              type=\"time\"\r\n              value={departureTime}\r\n              onChange={departureTimeHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div>\r\n        {searchClicked ? ( \r\n          // (loadingMessage? <p>...loading...</p> : \r\n          <ConnectionDisplay\r\n            onSetStartFormHidden={props.onSetStartFormHidden}\r\n            onGoBack={() => {\r\n              setHideSearchFields(false);\r\n              setSearchClicked(false);\r\n            }}\r\n            departureStop={departureStop}\r\n            destinationStop={destinationStop}\r\n            departureDay={departureDay}\r\n            departureTime={departureTime}\r\n            durationH = {0}\r\n            durationMin = {42}\r\n            additionalRandomMinutes= {3}\r\n          />\r\n        ) : (\r\n          <div className=\"buttons-search-page\">\r\n            <button\r\n              className=\"button-search\"\r\n              onClick={() => {\r\n                errorPrevent();\r\n                {\r\n                  if (errorOccured) {\r\n                    return;\r\n                  } else {\r\n                    setHideSearchFields(true);\r\n                    searchClickedHandler();\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              Suchen\r\n            </button>\r\n            <button\r\n              className=\"button-search\"\r\n              onClick={backClickHandler}\r\n              type=\"submit\"\r\n            >\r\n              Zurück zur Startseite\r\n            </button>{\" \"}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <datalist id=\"haltestellen\">\r\n        <option value=\"Hauptbahnhof\"></option>\r\n        <option value=\"Auf dem Hagen\"></option>\r\n        <option value=\"Tulpenweg\"></option>\r\n        <option value=\"Schützenplatz\"></option>\r\n        <option value=\"Landgericht/ Bahnhof\"></option>\r\n        <option value=\"Bürgerstraße\"></option>\r\n        <option value=\"Hiroshimaplatz\"></option>\r\n        <option value=\"Schillerstraße\"></option>\r\n        <option value=\"Reinholdstraße\"></option>\r\n        <option value=\"Fritz-Straße\"></option>\r\n        <option value=\"Treuenhagen\"></option>\r\n        <option value=\"Baumweg\"></option>\r\n        <option value=\"Stadtstieg\"></option>\r\n        <option value=\"Kiessee\"></option>\r\n        <option value=\"Teichstraße\"></option>\r\n        <option value=\"Bornbreite\"></option>\r\n        <option value=\"Gehrenring\"></option>\r\n        <option value=\"Hardtweg\"></option>\r\n        <option value=\"Tammstraße\"></option>\r\n        <option value=\"Klinikum\"></option>\r\n        <option value=\"Krugstraße\"></option>\r\n        <option value=\"Deisterstraße\"></option>\r\n        <option value=\"Elmweg\"></option>\r\n        <option value=\"Sollstraße\"></option>\r\n        <option value=\"Waldstraße\"></option>\r\n        <option value=\"Siekweg\"></option>\r\n        <option value=\"Klosterweg\"></option>\r\n        <option value=\"Lutteranger\"></option>\r\n        <option value=\"An der Lutte\"></option>\r\n        <option value=\"Grüner Weg\"></option>\r\n        <option value=\"Kreuzbergring\"></option>\r\n      </datalist>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n\r\n","import React, { useState } from \"react\";\r\nimport \"../Style.css\";\r\nimport Logo from \"./Logo.js\";\r\nimport SearchPage from \"./SearchPage\";\r\n\r\nconst StartPage = (props) => {\r\n  // ClickHandler\r\n  const [hideStartForm, setStartFormHidden] = useState(false);\r\n  const [callSearchPage, setCallSearchPage] = useState(false);\r\n\r\n  const continueClickedHandler = () => {\r\n    setCallSearchPage(true);\r\n  };\r\n\r\n  return (\r\n    //Import von classes Styling - dem css Modul\r\n    <div>\r\n      {hideStartForm ? null : (\r\n        <form>\r\n          <header className=\"StartPage-header\">\r\n            <h1 className=\"logo\">Nav2Gö</h1>\r\n            <div id=\"welcomeText\">\r\n              <p>\r\n                <br></br>\r\n                Wilkommen. <br></br>\r\n                Nutzen sie diese App um sich in folgender Situation\r\n                weiterzuhelfen:\r\n                <br></br>\r\n                <br></br>Sie haben sich dazu entschieden, Ihre Freunde in\r\n                Göttingen zu besuchen. Angekommen am Hauptbahnhof Göttingen \r\n                wollen Sie die öffentlichen Verkehrsmittel nutzen, um zu Ihnen\r\n                weiterfahren.\r\n                <br></br>\r\n                <br></br>\r\n                Ihre Freunde haben Ihnen bereits mitgeteilt, dass Sie an der\r\n                Haltestelle \"Treuenhagen\" wohnen. Da sie Ihre Freunde nun\r\n                unglücklicherweise nicht mehr erreichen können, haben Sie sich\r\n                die lokale Mobilitäts-App „Nav2Gö“ heruntergeladen, um sich vor\r\n                Ort zurechtzufinden. <br></br> <br></br>Nutzen Sie für die\r\n                Verbindungssuche vom Hauptbahnhof nach Treuenhagen das aktuelle\r\n                Datum und die aktuelle Uhrzeit.<br></br>\r\n                <br></br>\r\n              </p>\r\n            </div>\r\n            <h1 id=\"appVersionAnzeige2\" >App-Version 2</h1>\r\n          </header>\r\n          </form>\r\n          )}\r\n\r\n          {callSearchPage ? (\r\n            <SearchPage onGoBack={() => setCallSearchPage(false)} onSetStartFormHidden ={setStartFormHidden} />\r\n          ) : (\r\n            <button\r\n              id=\"welcomeTextButton\"\r\n              onClick={continueClickedHandler}\r\n              type=\"submit\"\r\n            >\r\n              Weiter\r\n            </button>\r\n          )}\r\n          {/* {clicked ? ( <SearchPage /> ) : (\r\n            <button className='button' onClick={()=> {continueClickedHandler(); setHideStartDisplay(true);  }} type=\"submit\">\r\n              Weiter\r\n            </button>)\r\n          } */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartPage;\r\n","import { useState } from \"react\";\r\nimport Startseite from \"./StartPage.js\";\r\nimport \"../Style.css\";\r\n\r\nconst StartButtonPage = () => {\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  return (\r\n    <div id=\"containerStartButtonPage\">\r\n      {clicked ? (\r\n        <Startseite />\r\n      ) : (\r\n        <div>\r\n          <p id=\"UseCaseDescribtion\">\r\n          <br></br>\r\n            Sehr geehrte(r) Teilnehmer(in),\r\n            <br></br>\r\n            <br></br> im Rahmen unserer Forschungsarbeit an der\r\n            Georg-August-Universität Göttingen beschäftigen wir uns mit dem\r\n            Thema \"Designing apps: A comparative evaluation of the importance of\r\n            functionality, performance and visual appeal\" und bitten Sie, zwei\r\n            Web-Apps zu testen und an einer Befragung teilzunehmen. Die\r\n            Teilnahme dauert insgesamt ca. 5-10 Minuten.\r\n            <br></br>\r\n            <br></br> Bitte lesen Sie die Beschreibung in den Apps sorgfältig\r\n            durch.\r\n            <br></br>\r\n            <br></br> Vielen Dank für die Teilnahme!\r\n            <br></br>\r\n            <br></br> Bei Fragen und Anmerkungen zu dieser Studie wenden Sie\r\n            sich gerne an:\r\n            <br></br>\r\n            <br></br>franz.buschendorf@stud.uni-goettingen.de\r\n            <br></br>katharina.girndt@stud.uni-goettingen.de\r\n            <br></br>kai.hoering@stud.uni-goettingen.de\r\n            <br></br>\r\n            <br></br>\r\n            \r\n          </p>\r\n          <button\r\n            class=\"buttonStartButton\"\r\n            disabled={clicked}\r\n            onClick={() => setClicked(true)}\r\n          >\r\n            {\" \"}\r\n            Start Nav2Gö{\" \"}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartButtonPage;\r\n","import React, { useState } from \"react\";\r\nimport Startseite from \"./components/StartPage.js\";\r\n//import Verbindung from \"./components/Verbindung.js\";\r\n//import ConnectionDisplay from \"./components/ConnectionDisplay.js\";\r\nimport StartButtonPage from \"./components/StartButtonPage.js\";\r\n\r\nimport SearchPage from \"./components/SearchPage.js\";\r\nimport Verbindungsanzeige from \"./components/ConnectionDisplay.js\";\r\nimport End from \"./components/End\";\r\n//import  from \"./components/Verbindungsauswahl.js\";\r\nimport ConnectionDisplay from \"./components/ConnectionDisplay.js\";\r\n\r\nconst App = () => {\r\n  return (\r\n    // diese <> </> Umschließung funktioniert in diesem Projekt als Ersatz für einen Wrapper oder <React.Fragment/>\r\n    <>\r\n      {/* <Test/> */}\r\n      <StartButtonPage />\r\n      {/* <Startseite /> */}\r\n      {/* <Verbindung />; */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// Zur Erhebung von Daten der Website - normalerweise zur Messung der user experience\r\n\r\n\r\nconst reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n\r\n    {/* <div>Hallo Welt</div> */}\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n \r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}